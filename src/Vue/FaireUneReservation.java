package Vue;

import ConnectionBD.ConnectionBD;
import Controleur.Controleur;
import Models.Salle;
import Models.User;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
//import java.sql.Date;
import java.util.Date;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sebas
 */
public class FaireUneReservation extends javax.swing.JFrame {
     private String idMDisponible="" ;
     private String idE ;
     private String heureDeb  ;
     private String heureFin ;
     private String dateSaisieString ;
     private User etudiant;
      private ArrayList<Salle> touteslesSalles=new ArrayList<Salle>();
       private Controleur c=new Controleur();
       DefaultListModel dlm = new DefaultListModel();
    /**
     * Creates new form calend
     */
    public FaireUneReservation(User etudiant , String heureDeb,String heureFin,String dateSaisieString) {
        initComponents();
        /*jLblMachineDispo.setVisible(false);
        jLblDisponible.setVisible(false);
        jBtnReserver.setVisible(false);*/
        this.etudiant= etudiant;
        this.idE=etudiant.getIdentifiantUser();
        this.heureDeb=heureDeb;
        this.heureFin=heureFin;
        this.dateSaisieString=dateSaisieString;
        this.initListSalle();
                
        //jPanel2.setLayout(null);
    }
    public FaireUneReservation() {
        initComponents();
        jLblMachineDispo.setVisible(false);
        jLblDisponible.setVisible(false);
        jBtnReserver.setVisible(false);
        //jPanel2.setLayout(null);
    }
      private void initListSalle(){
         touteslesSalles = c.tousLesSalle();
         for (int i = 0; i <touteslesSalles.size(); i++) {
             
             dlm.addElement(touteslesSalles.get(i).getNumeroSalle());
        }
         jListSalle.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jBtnRechercher = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSalle = new javax.swing.JList<>();
        jBtnReserver = new javax.swing.JButton();
        jLblDisponible = new javax.swing.JLabel();
        jLblMachineDispo = new javax.swing.JLabel();
        btnRetour = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBtnRechercher.setText("Rechercher");
        jBtnRechercher.setToolTipText("");
        jBtnRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRechercherActionPerformed(evt);
            }
        });

        jLabel1.setText("Liste des salles ");

        jListSalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListSalleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListSalle);

        jBtnReserver.setText("Reserver");
        jBtnReserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReserverActionPerformed(evt);
            }
        });

        jLblDisponible.setText("Machine disponible:");

        jLblMachineDispo.setText("...");

        btnRetour.setText("Retour");
        btnRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLblDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jLblMachineDispo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRetour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnReserver, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnRechercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLblDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLblMachineDispo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtnRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jBtnReserver, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRechercherActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:

            //jPanelDate.setVisible(true);
            jLblMachineDispo.setVisible(true);
            jLblDisponible.setVisible(true);
            jBtnReserver.setVisible(true);
            jBtnReserver.setEnabled(true);
            String idS = (String) jListSalle.getSelectedValue();

            Boolean SalleEstReserve = Controleur.SalleEstReserve(idS, dateSaisieString, heureDeb, heureFin);

            //Si la salle n'est pas reservée pour cette date et heure
            //alors chercher dans cette salle les machines disponibles
            if (!SalleEstReserve){
                ArrayList<String> machinesLibre = new ArrayList<>();
                //lancer la requête à l'aide du méthode MachinesLibre
                machinesLibre = Controleur.MachinesLibre(idS, dateSaisieString, heureDeb, heureFin);
                Random random = new Random();
                Integer aleatoire = random.nextInt(machinesLibre.size()) + 1;
                idMDisponible = machinesLibre.get(aleatoire);
                jLblMachineDispo.setText(idMDisponible);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Désolé la salle "+idS+ "est réserve pour les horaires "+heureDeb+"à "+heureFin+". Veuillez selectionner une autre salle ou changer le créneaux");

            }
        } catch (Exception ex) {
            Logger.getLogger(FaireUneReservation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBtnRechercherActionPerformed

    private void jBtnReserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReserverActionPerformed
        try {

            //avant de réserver, vérifier s'il y a déjà une réservation à cette heure et date pour n'importe quelle salle
            //Sinon on réserve
            String machineDejaReservee = Controleur.MachineReserveeParEtudiant(idE, dateSaisieString, heureDeb, heureFin);
            if (machineDejaReservee!=null){

                Salle salle = Controleur.RetrouverSalle(machineDejaReservee);
                JOptionPane.showMessageDialog(null, "vous avez déjà une réservation dans la salle "+salle.getNumeroSalle()+" pour la machine "+idMDisponible+"");
            }
            else {
                Controleur.faireUneReservation(idE, idMDisponible, dateSaisieString, heureDeb, heureFin);
                JOptionPane.showMessageDialog(null, "La reservation a été faite. Machine "+idMDisponible+" salle"+jListSalle.getSelectedValue()+"");
            }

            //Préparer requête INSERT INTO

        } catch (Exception ex) {
            Logger.getLogger(ChercherUneMachine.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBtnReserverActionPerformed

    private void jListSalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSalleMouseClicked
        jLblMachineDispo.setText("");
        //jLblDisponible.setVisible(true);
        jBtnReserver.setEnabled(false);

    }//GEN-LAST:event_jListSalleMouseClicked

    private void btnRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourActionPerformed
        // TODO add your handling code here:
        AccueilEtudiants aEtudiant = new AccueilEtudiants(etudiant);
        aEtudiant.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRetourActionPerformed

    //Fonction pour remplir les JComboBox créneaux horaire
    private void remplirJCreneaux(JComboBox<String> comboBoxARemplir){
       
        for (int i=8; i <=18; i++){                                        
                comboBoxARemplir.addItem(String.valueOf(i+":00"));         
                comboBoxARemplir.addItem(String.valueOf(i+":30"));              
        }
    }
    
    private void RemplirComboHeureFin(JComboBox<String> comboBoxARemplir, int heure, String min1, String min2){
          
            comboBoxARemplir.addItem(String.valueOf(heure+""+min1));
            //remplir le combo pas au-délà de 3 heures et demie
            for (int i=heure+1; i<=heure+3; i++){
                
                comboBoxARemplir.addItem(String.valueOf(i+""+min2));         
                comboBoxARemplir.addItem(String.valueOf(i+""+min1));
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FaireUneReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FaireUneReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FaireUneReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FaireUneReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FaireUneReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRetour;
    private javax.swing.JButton jBtnRechercher;
    private javax.swing.JButton jBtnReserver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblDisponible;
    private javax.swing.JLabel jLblMachineDispo;
    private javax.swing.JList<String> jListSalle;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
